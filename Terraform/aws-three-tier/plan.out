Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but
will not be persisted to local or remote state storage.


The Terraform execution plan has been generated and is shown below.
Resources are shown in alphabetical order for quick scanning. Green resources
will be created (or destroyed and then created if an existing resource
exists), yellow resources are being changed in-place, and red resources
will be destroyed. Cyan entries are data sources to be read.

Note: You didn't specify an "-out" parameter to save this plan, so when
"apply" is called, Terraform can't guarantee this is what will execute.

[32m+ aws_internet_gateway.example_ig
[0m    tags.%:    "1"
    tags.Name: "example_ig"
    vpc_id:    "<computed>"
[0m
[0m[32m+ aws_route_table.example_route_table
[0m    route.#:                                     "1"
    route.~1723475798.cidr_block:                "0.0.0.0/0"
    route.~1723475798.gateway_id:                "<computed>"
    route.~1723475798.instance_id:               ""
    route.~1723475798.nat_gateway_id:            ""
    route.~1723475798.network_interface_id:      ""
    route.~1723475798.vpc_peering_connection_id: ""
    tags.%:                                      "1"
    tags.Name:                                   "example_route_table"
    vpc_id:                                      "<computed>"
[0m
[0m[32m+ aws_route_table_association.example_route_table_asc
[0m    route_table_id: "<computed>"
    subnet_id:      "<computed>"
[0m
[0m[32m+ module.example_ec2_app.aws_instance.ec2
[0m    ami:                                       "ami-f6e27ee0"
    associate_public_ip_address:               "<computed>"
    availability_zone:                         "<computed>"
    ebs_block_device.#:                        "<computed>"
    ephemeral_block_device.#:                  "<computed>"
    instance_state:                            "<computed>"
    instance_type:                             "t2.micro"
    key_name:                                  "nb-keypair-02"
    network_interface_id:                      "<computed>"
    placement_group:                           "<computed>"
    private_dns:                               "<computed>"
    private_ip:                                "<computed>"
    public_dns:                                "<computed>"
    public_ip:                                 "<computed>"
    root_block_device.#:                       "1"
    root_block_device.0.delete_on_termination: "true"
    root_block_device.0.iops:                  "<computed>"
    root_block_device.0.volume_size:           "8"
    root_block_device.0.volume_type:           "gp2"
    security_groups.#:                         "<computed>"
    source_dest_check:                         "true"
    subnet_id:                                 "<computed>"
    tags.%:                                    "4"
    tags.Name:                                 "example-app-instance default environment 01"
    tags.domain_name:                          "some.domain"
    tags.environment:                          "default environment"
    tags.server_role:                          "default server role"
    tenancy:                                   "<computed>"
    user_data:                                 "395f26c308c71c161a05bf852e4b06f204836cf9"
    vpc_security_group_ids.#:                  "1"
    vpc_security_group_ids.297099672:          "sg-cf2a2bb3"
[0m
[0m[32m+ module.example_ec2_web.aws_eip.default
[0m    allocation_id:     "<computed>"
    association_id:    "<computed>"
    domain:            "<computed>"
    instance:          "<computed>"
    network_interface: "<computed>"
    private_ip:        "<computed>"
    public_ip:         "<computed>"
    vpc:               "true"
[0m
[0m[32m+ module.example_ec2_web.aws_instance.ec2
[0m    ami:                                       "ami-f6e27ee0"
    associate_public_ip_address:               "<computed>"
    availability_zone:                         "<computed>"
    ebs_block_device.#:                        "<computed>"
    ephemeral_block_device.#:                  "<computed>"
    instance_state:                            "<computed>"
    instance_type:                             "t2.micro"
    key_name:                                  "nb-keypair-02"
    network_interface_id:                      "<computed>"
    placement_group:                           "<computed>"
    private_dns:                               "<computed>"
    private_ip:                                "<computed>"
    public_dns:                                "<computed>"
    public_ip:                                 "<computed>"
    root_block_device.#:                       "1"
    root_block_device.0.delete_on_termination: "true"
    root_block_device.0.iops:                  "<computed>"
    root_block_device.0.volume_size:           "8"
    root_block_device.0.volume_type:           "gp2"
    security_groups.#:                         "<computed>"
    source_dest_check:                         "true"
    subnet_id:                                 "<computed>"
    tags.%:                                    "4"
    tags.Name:                                 "example-web-instance default environment 01"
    tags.domain_name:                          "some.domain"
    tags.environment:                          "default environment"
    tags.server_role:                          "default server role"
    tenancy:                                   "<computed>"
    user_data:                                 "395f26c308c71c161a05bf852e4b06f204836cf9"
    vpc_security_group_ids.#:                  "<computed>"
[0m
[0m[32m+ module.example_main_instance_elb.aws_elb.example_instances_elb
[0m    availability_zones.#:                   "<computed>"
    connection_draining:                    "true"
    connection_draining_timeout:            "400"
    cross_zone_load_balancing:              "true"
    dns_name:                               "<computed>"
    health_check.#:                         "1"
    health_check.0.healthy_threshold:       "2"
    health_check.0.interval:                "30"
    health_check.0.target:                  "HTTP:80/"
    health_check.0.timeout:                 "3"
    health_check.0.unhealthy_threshold:     "2"
    idle_timeout:                           "400"
    instances.#:                            "<computed>"
    internal:                               "<computed>"
    listener.#:                             "1"
    listener.1237843950.instance_port:      "80"
    listener.1237843950.instance_protocol:  "http"
    listener.1237843950.lb_port:            "80"
    listener.1237843950.lb_protocol:        "http"
    listener.1237843950.ssl_certificate_id: ""
    name:                                   "example-elb"
    security_groups.#:                      "<computed>"
    source_security_group:                  "<computed>"
    source_security_group_id:               "<computed>"
    subnets.#:                              "<computed>"
    zone_id:                                "<computed>"
[0m
[0m[32m+ module.example_main_instance_elb.aws_lb_cookie_stickiness_policy.default
[0m    cookie_expiration_period: "600"
    lb_port:                  "80"
    load_balancer:            "<computed>"
    name:                     "lbpolicy"
[0m
[0m[32m+ module.example_rds_instance.aws_db_instance.example_rds_instance
[0m    address:                          "<computed>"
    allocated_storage:                "4"
    apply_immediately:                "<computed>"
    arn:                              "<computed>"
    auto_minor_version_upgrade:       "true"
    availability_zone:                "<computed>"
    backup_retention_period:          "<computed>"
    backup_window:                    "<computed>"
    character_set_name:               "<computed>"
    copy_tags_to_snapshot:            "false"
    db_subnet_group_name:             "example_db_subnet_group"
    endpoint:                         "<computed>"
    engine:                           "postgres"
    engine_version:                   "9.4.1"
    hosted_zone_id:                   "<computed>"
    identifier:                       "example-db-instance"
    instance_class:                   "db.t2.micro"
    kms_key_id:                       "<computed>"
    license_model:                    "<computed>"
    maintenance_window:               "<computed>"
    monitoring_interval:              "0"
    monitoring_role_arn:              "<computed>"
    multi_az:                         "<computed>"
    name:                             "postgres_db_instance"
    option_group_name:                "<computed>"
    parameter_group_name:             "<computed>"
    password:                         "<sensitive>"
    port:                             "<computed>"
    publicly_accessible:              "false"
    replicas.#:                       "<computed>"
    skip_final_snapshot:              "true"
    status:                           "<computed>"
    storage_type:                     "<computed>"
    username:                         "admin"
    vpc_security_group_ids.#:         "1"
    vpc_security_group_ids.297099672: "sg-cf2a2bb3"
[0m
[0m[32m+ module.example_security_groups.aws_security_group.app_instance_sg
[0m    description:                          "API access from web server"
    egress.#:                             "1"
    egress.482069346.cidr_blocks.#:       "1"
    egress.482069346.cidr_blocks.0:       "0.0.0.0/0"
    egress.482069346.from_port:           "0"
    egress.482069346.prefix_list_ids.#:   "0"
    egress.482069346.protocol:            "-1"
    egress.482069346.security_groups.#:   "0"
    egress.482069346.self:                "false"
    egress.482069346.to_port:             "0"
    ingress.#:                            "2"
    ingress.1165952730.cidr_blocks.#:     "1"
    ingress.1165952730.cidr_blocks.0:     "10.99.1.0/24"
    ingress.1165952730.from_port:         "80"
    ingress.1165952730.protocol:          "tcp"
    ingress.1165952730.security_groups.#: "0"
    ingress.1165952730.self:              "false"
    ingress.1165952730.to_port:           "80"
    ingress.20788344.cidr_blocks.#:       "1"
    ingress.20788344.cidr_blocks.0:       "10.99.1.0/24"
    ingress.20788344.from_port:           "22"
    ingress.20788344.protocol:            "tcp"
    ingress.20788344.security_groups.#:   "0"
    ingress.20788344.self:                "false"
    ingress.20788344.to_port:             "22"
    name:                                 "web_instance_sg"
    owner_id:                             "<computed>"
    vpc_id:                               "<computed>"
[0m
[0m[32m+ module.example_security_groups.aws_security_group.db_instance_sg
[0m    description:                          "Postgres access from app server"
    egress.#:                             "1"
    egress.1116803802.cidr_blocks.#:      "1"
    egress.1116803802.cidr_blocks.0:      "10.99.2.0/24"
    egress.1116803802.from_port:          "0"
    egress.1116803802.prefix_list_ids.#:  "0"
    egress.1116803802.protocol:           "-1"
    egress.1116803802.security_groups.#:  "0"
    egress.1116803802.self:               "false"
    egress.1116803802.to_port:            "0"
    ingress.#:                            "1"
    ingress.1956060229.cidr_blocks.#:     "1"
    ingress.1956060229.cidr_blocks.0:     "10.99.2.0/24"
    ingress.1956060229.from_port:         "80"
    ingress.1956060229.protocol:          "tcp"
    ingress.1956060229.security_groups.#: "0"
    ingress.1956060229.self:              "false"
    ingress.1956060229.to_port:           "80"
    name:                                 "db_instance_sg"
    owner_id:                             "<computed>"
    vpc_id:                               "<computed>"
[0m
[0m[32m+ module.example_security_groups.aws_security_group.elb_sg
[0m    description:                          "Used in the terraform"
    egress.#:                             "1"
    egress.482069346.cidr_blocks.#:       "1"
    egress.482069346.cidr_blocks.0:       "0.0.0.0/0"
    egress.482069346.from_port:           "0"
    egress.482069346.prefix_list_ids.#:   "0"
    egress.482069346.protocol:            "-1"
    egress.482069346.security_groups.#:   "0"
    egress.482069346.self:                "false"
    egress.482069346.to_port:             "0"
    ingress.#:                            "1"
    ingress.2080286321.cidr_blocks.#:     "1"
    ingress.2080286321.cidr_blocks.0:     "0.0.0.0/0"
    ingress.2080286321.from_port:         "80"
    ingress.2080286321.protocol:          "tcp"
    ingress.2080286321.security_groups.#: "0"
    ingress.2080286321.self:              "false"
    ingress.2080286321.to_port:           "80"
    name:                                 "elb_sg"
    owner_id:                             "<computed>"
    vpc_id:                               "<computed>"
[0m
[0m[32m+ module.example_security_groups.aws_security_group.web_instance_sg
[0m    description:                          "Used in the terraform"
    egress.#:                             "1"
    egress.482069346.cidr_blocks.#:       "1"
    egress.482069346.cidr_blocks.0:       "0.0.0.0/0"
    egress.482069346.from_port:           "0"
    egress.482069346.prefix_list_ids.#:   "0"
    egress.482069346.protocol:            "-1"
    egress.482069346.security_groups.#:   "0"
    egress.482069346.self:                "false"
    egress.482069346.to_port:             "0"
    ingress.#:                            "2"
    ingress.1753530290.cidr_blocks.#:     "1"
    ingress.1753530290.cidr_blocks.0:     "0.0.0.0/0"
    ingress.1753530290.from_port:         "22"
    ingress.1753530290.protocol:          "tcp"
    ingress.1753530290.security_groups.#: "0"
    ingress.1753530290.self:              "false"
    ingress.1753530290.to_port:           "22"
    ingress.2080286321.cidr_blocks.#:     "1"
    ingress.2080286321.cidr_blocks.0:     "0.0.0.0/0"
    ingress.2080286321.from_port:         "80"
    ingress.2080286321.protocol:          "tcp"
    ingress.2080286321.security_groups.#: "0"
    ingress.2080286321.self:              "false"
    ingress.2080286321.to_port:           "80"
    name:                                 "web_instance_sg"
    owner_id:                             "<computed>"
    vpc_id:                               "<computed>"
[0m
[0m[32m+ module.example_subnet_db_group.aws_db_subnet_group.db_subnet_group
[0m    arn:          "<computed>"
    description:  "Managed by Terraform"
    name:         "example_db_subnet_group"
    subnet_ids.#: "<computed>"
    tags.%:       "1"
    tags.Name:    "Example DB subnet group"
[0m
[0m[32m+ module.subnet_public.aws_subnet.example_public_subnet
[0m    availability_zone:       "us-east-1"
    cidr_block:              "10.99.1.0/24"
    map_public_ip_on_launch: "true"
    tags.%:                  "1"
    tags.Name:               "subnet_public"
    vpc_id:                  "<computed>"
[0m
[0m[33m~ module.subnet_public.data.aws_vpc.selected
[0m    cidr_block:       "" => "<computed>"
    default:          "" => "<computed>"
    dhcp_options_id:  "" => "<computed>"
    instance_tenancy: "" => "<computed>"
    state:            "" => "<computed>"
    tags.%:           "" => "<computed>"
[0m
[0m[32m+ module.subnets_private.aws_subnet.example_subnet_private_0
[0m    availability_zone:       "us-east-1"
    cidr_block:              "10.99.2.0/24"
    map_public_ip_on_launch: "false"
    tags.%:                  "1"
    tags.Name:               "subnet_private_0"
    vpc_id:                  "<computed>"
[0m
[0m[32m+ module.subnets_private.aws_subnet.example_subnet_private_1
[0m    availability_zone:       "us-east-1"
    cidr_block:              "10.99.3.0/24"
    map_public_ip_on_launch: "false"
    tags.%:                  "1"
    tags.Name:               "subnet_private_1"
    vpc_id:                  "<computed>"
[0m
[0m[33m~ module.subnets_private.data.aws_vpc.selected
[0m    cidr_block:       "" => "<computed>"
    default:          "" => "<computed>"
    dhcp_options_id:  "" => "<computed>"
    instance_tenancy: "" => "<computed>"
    state:            "" => "<computed>"
    tags.%:           "" => "<computed>"
[0m
[0m[32m+ module.vpc.aws_vpc.example_vpc_id
[0m    cidr_block:                "10.99.0.0/16"
    default_network_acl_id:    "<computed>"
    default_route_table_id:    "<computed>"
    default_security_group_id: "<computed>"
    dhcp_options_id:           "<computed>"
    enable_classiclink:        "<computed>"
    enable_dns_hostnames:      "true"
    enable_dns_support:        "true"
    instance_tenancy:          "default"
    main_route_table_id:       "<computed>"
    tags.%:                    "1"
    tags.Name:                 "small_test_vpc"
[0m
[0m
[0m[1mPlan:[0m 18 to add, 0 to change, 0 to destroy.[0m
